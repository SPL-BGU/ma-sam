((:init  (at package1 s0) (at package2 s0) (at truck1 s0) (at driver1 s2) (at driver2 s2) (at truck2 s0) (empty truck1) (empty truck2) (path s0 p1-0) (path s2 p1-2) (path p1-0 s1) (path p1-0 s0) (path s1 p1-2) (path s1 p1-0) (path p1-2 s2) (path p1-2 s1) (link s0 s1) (link s0 s2) (link s2 s0) (link s2 s1) (link s1 s0) (link s1 s2))
(operators: (walk driver1 s2 p1-2) (nop ) (nop ) (nop ) (nop ) (nop ) (nop ) (nop ))
(:state  (at package1 s0) (at package2 s0) (at truck1 s0) (at driver1 p1-2) (at driver2 s2) (at truck2 s0) (empty truck1) (empty truck2) (path s0 p1-0) (path s2 p1-2) (path p1-0 s1) (path p1-0 s0) (path s1 p1-2) (path s1 p1-0) (path p1-2 s2) (path p1-2 s1) (link s0 s1) (link s0 s2) (link s2 s0) (link s2 s1) (link s1 s0) (link s1 s2))
(operators: (walk driver1 p1-2 s1) (dummy-add-predicate-action driver2) (nop ) (nop ) (nop ) (nop ) (nop ) (nop ))
(:state  (at package1 s0) (at package2 s0) (at truck1 s0) (at driver1 s1) (at driver2 s2) (at truck2 s0) (empty truck1) (empty truck2) (path s0 p1-0) (path s2 p1-2) (path p1-0 s1) (path p1-0 s0) (path s1 p1-2) (path s1 p1-0) (path p1-2 s2) (path p1-2 s1) (link s0 s1) (link s0 s2) (link s2 s0) (link s2 s1) (link s1 s0) (link s1 s2) (dummy-additional-predicate ))
(operators: (walk driver1 s1 p1-0) (nop ) (dummy-add-predicate-action driver3) (nop ) (nop ) (nop ) (nop ) (nop ))
(:state  (at package1 s0) (at package2 s0) (at truck1 s0) (at driver1 p1-0) (at driver2 s2) (at truck2 s0) (empty truck1) (empty truck2) (path s0 p1-0) (path s2 p1-2) (path p1-0 s1) (path p1-0 s0) (path s1 p1-2) (path s1 p1-0) (path p1-2 s2) (path p1-2 s1) (link s0 s1) (link s0 s2) (link s2 s0) (link s2 s1) (link s1 s0) (link s1 s2) (dummy-additional-predicate ))
(operators: (walk driver1 p1-0 s0) (dummy-add-predicate-action driver2) (nop ) (nop ) (nop ) (nop ) (nop ) (nop ))
(:state  (at package1 s0) (at package2 s0) (at truck1 s0) (at driver2 s2) (at driver1 s0) (at truck2 s0) (empty truck1) (empty truck2) (path s0 p1-0) (path s2 p1-2) (path p1-0 s1) (path p1-0 s0) (path s1 p1-2) (path s1 p1-0) (path p1-2 s2) (path p1-2 s1) (link s0 s1) (link s0 s2) (link s2 s0) (link s2 s1) (link s1 s0) (link s1 s2) (dummy-additional-predicate ))
(operators: (board-truck driver1 truck1 s0) (nop ) (nop ) (nop ) (nop ) (nop ) (nop ) (nop ))
(:state  (at package1 s0) (at package2 s0) (at truck1 s0) (at driver2 s2) (at truck2 s0) (empty truck2) (path s0 p1-0) (path s2 p1-2) (path p1-0 s1) (path p1-0 s0) (path s1 p1-2) (path s1 p1-0) (path p1-2 s2) (path p1-2 s1) (link s0 s1) (link s0 s2) (link s2 s0) (link s2 s1) (link s1 s0) (link s1 s2) (dummy-additional-predicate ) (driving driver1 truck1))
(operators: (drive-truck driver1 s0 s1 truck1) (nop ) (nop ) (nop ) (nop ) (nop ) (nop ) (nop ))
(:state  (at package1 s0) (at package2 s0) (at truck1 s1) (at driver2 s2) (at truck2 s0) (empty truck2) (path s0 p1-0) (path s2 p1-2) (path p1-0 s1) (path p1-0 s0) (path s1 p1-2) (path s1 p1-0) (path p1-2 s2) (path p1-2 s1) (link s0 s1) (link s0 s2) (link s2 s0) (link s2 s1) (link s1 s0) (link s1 s2) (dummy-additional-predicate ) (driving driver1 truck1))
)